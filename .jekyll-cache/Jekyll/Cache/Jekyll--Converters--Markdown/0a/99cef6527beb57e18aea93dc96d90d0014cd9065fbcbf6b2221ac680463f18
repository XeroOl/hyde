I"y0<p>This document will walk you through how to begin modding using the Mirin Template.</p>

<p>Table of Contents</p>
<ol>
  <li><a href="#install-notitg">Install NotITG</a></li>
  <li><a href="#download-the-template">Download the Template</a></li>
  <li><a href="#song-setup">Setting up the Song and .sm</a></li>
  <li><a href="#check-your-work">Check your work</a></li>
  <li><a href="#default-mods">Default Mods</a></li>
  <li><a href="#setting-mods">Setting Mods</a></li>
  <li><a href="smooth-transitions">Smooth Transitions</a></li>
  <li><a href="#conclusion">Conclusion</a></li>
</ol>

<p><a name="install-notitg"></a></p>
<h2 id="install-notitg">Install NotITG</h2>
<p>If you already have the game, you can skip this step.
If you don’t have NotITG already, you can install NotITG from <a href="https://notitg.heysora.net">notitg.heysora.net</a>.
Download the full setup, unzip it, and then make a shortcut to the <code class="language-plaintext highlighter-rouge">NotITG</code> executable.
If everything went right, you should be able to start up the game by running the <code class="language-plaintext highlighter-rouge">NotITG.exe</code> file in the <code class="language-plaintext highlighter-rouge">Program/</code> folder.</p>

<p><a name="download-the-template"></a></p>
<h2 id="download-the-template">Download the Template</h2>
<p>To start, you need to find the folder that NotITG is installed in.
Download the <a href="http://github.com/xerool/notitg-mirin/archive/master.zip">Mirin Template Code from GitHub</a> and unzip it into a song pack in your <code class="language-plaintext highlighter-rouge">Songs</code> folder.
When you’re done, the structure should be something like this (except <code class="language-plaintext highlighter-rouge">My Song Pack</code> would be filled in with whatever information you want):</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>NotITG
└── Songs
    └── My Song Pack
        └── notitg-mirin-master
            ├── lua
            ├── readme.md
            ├── Song.ogg
            ├── Song.sm
            └── template
</code></pre></div></div>

<p>Now, if everything went right, you can launch the game and find the “Mirin Template” song in the song wheel.</p>

<p><a name="song-setup"></a></p>
<h2 id="setting-up-the-song-and-sm">Setting up the Song and .sm</h2>
<p>You probably don’t want to make mods for the provided <code class="language-plaintext highlighter-rouge">Song.sm</code> and <code class="language-plaintext highlighter-rouge">Song.ogg</code>, so you can use your own.</p>

<h3 id="using-an-existing-simfile">Using an existing simfile</h3>
<p>If you already have a <code class="language-plaintext highlighter-rouge">.sm</code> and audio file you want to use, you can delete the provided <code class="language-plaintext highlighter-rouge">Song.sm</code> and <code class="language-plaintext highlighter-rouge">Song.ogg</code>, and use your own file.
Inside your <code class="language-plaintext highlighter-rouge">.sm</code>, you need to set <code class="language-plaintext highlighter-rouge">#FGCHANGES:</code> to the following:</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>#FGCHANGES:0.000=template/main.xml=1.000=0=0=1=====,
;
</code></pre></div></div>
<p>Now you’re ready to <a href="#Default Mods">move on to modding</a>.</p>

<h3 id="adapting-the-provided-songsm">Adapting the provided Song.sm</h3>
<p>First, convert your song into the <code class="language-plaintext highlighter-rouge">ogg</code> audio format, and replace the <code class="language-plaintext highlighter-rouge">Song.ogg</code> file with your own.
Next, open <code class="language-plaintext highlighter-rouge">Song.sm</code> in a text editor. I recommend using the Notepad++ editor, but any text editor works. With Notepad++, you can right click on the file, and choose “Open With Notepad++”.
Inside, there are a couple of things to change:</p>
<ul>
  <li><code class="language-plaintext highlighter-rouge">#TITLE:</code> should be changed from “Mirin Template” to the name of your song</li>
  <li><code class="language-plaintext highlighter-rouge">#ARTIST:</code> should be changed to the artist</li>
  <li><code class="language-plaintext highlighter-rouge">#OFFSET:</code> needs to be set to the offset of your song</li>
  <li><code class="language-plaintext highlighter-rouge">#BPMS:</code> needs to be set to <code class="language-plaintext highlighter-rouge">0.000=</code>, and then the BPM of your song. (The provided Song.ogg is 129.948bpm)</li>
  <li>On line 32 of <code class="language-plaintext highlighter-rouge">Song.sm</code>, there’s a line that just has a <code class="language-plaintext highlighter-rouge">:</code> symbol. Add your username before this colon</li>
  <li>On line 34 of <code class="language-plaintext highlighter-rouge">Song.sm</code>, there’s a line that has <code class="language-plaintext highlighter-rouge">1:</code>. Replace that with the difficulty rating of your file.</li>
</ul>

<p>NOTE: Only edit the <code class="language-plaintext highlighter-rouge">.sm</code> while the game is closed. To make the game reload changes to the <code class="language-plaintext highlighter-rouge">.sm</code> file, you need to delete the <code class="language-plaintext highlighter-rouge">Cache</code> folder before re-opening the game.
After you’ve put all of the metadata into the <code class="language-plaintext highlighter-rouge">.sm</code>, you’ll need to replace the default provided chart by writing your own chart. I’m not going to cover how to do this here.</p>

<p><a name="check-your-work"></a></p>
<h2 id="check-your-work">Check your work</h2>
<p>Before you go any further, you’ll want to check that things are prepared correctly.
Here’s what to do:</p>
<ol>
  <li>Open up NotITG, and then find your song in the song wheel.</li>
  <li>Play the song. If the template is loaded, you should see the theming elements dissappear at the beginning of the song. (If the lifebar and score and stuff is still there, something’s wrong)</li>
</ol>

<p>If that works, you’re finally ready to start modding!</p>

<p><a name="default-mods"></a></p>
<h2 id="default-mods">Default Mods</h2>
<p>In NotITG:</p>
<ol>
  <li>Go to Edit Mode</li>
  <li>Select Group</li>
  <li>Select Song</li>
  <li>Select Steps (usually Expert steps)</li>
  <li>Choose “Edit Existing”</li>
</ol>

<p>This is the editor view. Use the arrow keys to scroll through the chart. You can use the space bar to select the bounds on a range, and then use the <code class="language-plaintext highlighter-rouge">p</code> key to play the song at that range. 
Turn off the measure lines in <code class="language-plaintext highlighter-rouge">Esc&gt;Preferences&gt;Show Measure Lines</code>.</p>

<p>Open up <code class="language-plaintext highlighter-rouge">lua/mods.xml</code> in the text editor.
Under the line <code class="language-plaintext highlighter-rouge">-- your code goes here here:</code>, add this:</p>
<div class="language-lua highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">setdefault</span> <span class="p">{</span><span class="mi">2</span><span class="p">,</span> <span class="s1">'xmod'</span><span class="p">,</span> <span class="mi">100</span><span class="p">,</span> <span class="s1">'overhead'</span><span class="p">,</span> <span class="mi">100</span><span class="p">,</span> <span class="s1">'dizzyholds'</span><span class="p">,</span> <span class="mi">100</span><span class="p">,</span> <span class="s1">'modtimer'</span><span class="p">}</span>
</code></pre></div></div>
<p>This sets the rate to <code class="language-plaintext highlighter-rouge">2x</code>, sets the perpective to overhead, and does a couple of other things.
The <code class="language-plaintext highlighter-rouge">setdefault</code> function takes in pairs of numbers and mods, and sets the mod to that amount.
More information about <code class="language-plaintext highlighter-rouge">setdefault</code> can be found on <a href="docs/setdefault.md">its documentation page</a>.</p>

<p><a name="setting-mods"></a></p>
<h2 id="setting-mods">Setting Mods</h2>
<p>Now that you’ve set some base mods, you can now schedule mods to change at different beats of the song. To do that, you can use the <a href="docs/set.md">set function</a>.
The <code class="language-plaintext highlighter-rouge">set</code> function works just like <code class="language-plaintext highlighter-rouge">setdefault</code>, except for an extra beat number at the beginning.
Try choosing a mod from <a href="docs/mods.md">the list</a>, and applying it with set.
Here’s an example that turns <code class="language-plaintext highlighter-rouge">invert</code> on at beat 4, and turns it back off at beat 8.</p>
<div class="language-lua highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">-- on beat 4, set 100% invert</span>
<span class="n">set</span> <span class="p">{</span><span class="mi">4</span><span class="p">,</span> <span class="mi">100</span><span class="p">,</span> <span class="s1">'invert'</span><span class="p">}</span>

<span class="c1">-- on beat 8, set 0% invert</span>
<span class="n">set</span> <span class="p">{</span><span class="mi">8</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="s1">'invert'</span><span class="p">}</span>
</code></pre></div></div>
<p>This example used invert, but <code class="language-plaintext highlighter-rouge">set</code> works with any mod. You can try changing out <code class="language-plaintext highlighter-rouge">invert</code> for another mod from <a href="docs/mods.md">the list</a>, or find more information can be found on <a href="docs/set.md">set’s documentation page</a>.</p>

<p><a name="smooth-transitions"></a></p>
<h2 id="smooth-transitions">Smooth Transitions</h2>
<p>If you tried the previous example, you’ll notice that there’s no animations; the mods instantly turn on and off. Sometimes that’s okay, but lots of the time, you’ll want to choose an animation to use.
That’s where the <a href="docs/ease.md">ease function</a> comes in.
The ease function works like set, except it needs two more arguments: a length, and an ease function.</p>
<div class="language-lua highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">-- ease {beat, length, ease, percent, mod}</span>
</code></pre></div></div>
<p>Here’s an example that that turns <code class="language-plaintext highlighter-rouge">invert</code> on at beat 12, and turns it back off at beat 16 smoothly.</p>
<div class="language-lua highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">-- on beat 12, for 2 beats, use the `outExpo` animation to set 100% invert</span>
<span class="n">ease</span> <span class="p">{</span><span class="mi">12</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="n">outExpo</span><span class="p">,</span> <span class="mi">100</span><span class="p">,</span> <span class="s1">'invert'</span><span class="p">}</span>

<span class="c1">-- on beat 16, for 2 beats, use the `outExpo` animation to set 0% invert</span>
<span class="n">ease</span> <span class="p">{</span><span class="mi">12</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="n">outExpo</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="s1">'invert'</span><span class="p">}</span>
</code></pre></div></div>
<p>This example used a length of <code class="language-plaintext highlighter-rouge">2</code>, and the <code class="language-plaintext highlighter-rouge">outExpo</code> ease, but you can try changing the ease to another one from <a href="docs/eases.md">the ease list</a>, and you can change the length.
You can find more information about <code class="language-plaintext highlighter-rouge">ease</code> on <a href="/docs/ease.md">its documentation page</a>.</p>

<p><a name="conclusion"></a></p>
<h2 id="conclusion">Conclusion</h2>
<p>Now you have everything you need to begin modding. The <a href="/index.md">main page</a> has links to other functions you can read about.</p>
:ET